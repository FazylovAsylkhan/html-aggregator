// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: posts.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createPost = `-- name: CreatePost :one
INSERT INTO postsBaspana (
    id, 
    created_at, 
    updated_at, 
    date_publication,
    title, 
    image, 
    cost_for_metr,
    address, 
    link_detail_post, 
    number_object, 
    count_access,
    region
)
VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12)
RETURNING id, created_at, updated_at, date_publication, title, image, cost_for_metr, address, link_detail_post, number_object, count_access, region
`

type CreatePostParams struct {
	ID              uuid.UUID
	CreatedAt       time.Time
	UpdatedAt       time.Time
	DatePublication time.Time
	Title           string
	Image           string
	CostForMetr     int32
	Address         string
	LinkDetailPost  string
	NumberObject    int32
	CountAccess     int32
	Region          string
}

func (q *Queries) CreatePost(ctx context.Context, arg CreatePostParams) (Postsbaspana, error) {
	row := q.db.QueryRowContext(ctx, createPost,
		arg.ID,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.DatePublication,
		arg.Title,
		arg.Image,
		arg.CostForMetr,
		arg.Address,
		arg.LinkDetailPost,
		arg.NumberObject,
		arg.CountAccess,
		arg.Region,
	)
	var i Postsbaspana
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DatePublication,
		&i.Title,
		&i.Image,
		&i.CostForMetr,
		&i.Address,
		&i.LinkDetailPost,
		&i.NumberObject,
		&i.CountAccess,
		&i.Region,
	)
	return i, err
}

const getPost = `-- name: GetPost :one
SELECT id, created_at, updated_at, date_publication, title, image, cost_for_metr, address, link_detail_post, number_object, count_access, region
FROM postsBaspana
WHERE number_object = $1
AND link_detail_post = $2
`

type GetPostParams struct {
	NumberObject   int32
	LinkDetailPost string
}

func (q *Queries) GetPost(ctx context.Context, arg GetPostParams) (Postsbaspana, error) {
	row := q.db.QueryRowContext(ctx, getPost, arg.NumberObject, arg.LinkDetailPost)
	var i Postsbaspana
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DatePublication,
		&i.Title,
		&i.Image,
		&i.CostForMetr,
		&i.Address,
		&i.LinkDetailPost,
		&i.NumberObject,
		&i.CountAccess,
		&i.Region,
	)
	return i, err
}
